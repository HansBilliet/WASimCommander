. .\version.ps1
. .\Merge-Tokens.ps1

function Make-Version {
	[CmdletBinding()]
	param(
		[string]$SrcPath = "..\src",
		[string]$DocPath = "..\docs"
	)

	$gitver = & { git rev-parse --short=8 HEAD } 2>&1 | % ToString
	#$gitver = & { git describe --tags --long } 2>&1 | % ToString
	Write-Host "Git returned version: $gitver"
	if ($gitver.length  -eq 8) {
		$VER_COMIT = $gitver.ToUpper()
	}

	$Tokens = New-Object -TypeName "System.Collections.Hashtable"
	$Tokens.Add("VER_MAJOR", $VER_MAJOR)
	$Tokens.Add("VER_MINOR", $VER_MINOR)
	$Tokens.Add("VER_PATCH", $VER_PATCH)
	$Tokens.Add("VER_BUILD", $VER_BUILD)
	$Tokens.Add("VER_COMIT", "0x{0:X8}" -f $VER_COMIT)
	$Tokens.Add("VER_NAME",  $VER_NAME)
	$Tokens.Add("VERSION",   "0x{0:X8}" -f ($VER_MAJOR -shl 24 -bor $VER_MINOR -shl 16 -bor $VER_PATCH -shl 8 -bor $VER_BUILD))
	$Tokens.Add("VERSION_STRING", "{0}.{1}.{2}.{3}" -f ($VER_MAJOR,$VER_MINOR,$VER_PATCH,$VER_BUILD))
	$Tokens.Add("BUILD_DATE", (Get-Date).ToUniversalTime().ToString("yyyy-mm-ddTHH:mm:ssZ"))

	$Tokens.Add("PROJECT_NAME",  $PROJECT_NAME)
	$Tokens.Add("CLIENT_NAME",   $CLIENT_NAME)
	$Tokens.Add("SERVER_NAME",   $SERVER_NAME)
	$Tokens.Add("APP_GUI_NAME",  $APP_GUI_NAME)
	$Tokens.Add("PROJECT_COPY",  $PROJECT_COPY)
	$Tokens.Add("PROJECT_URL",   $PROJECT_URL)
	$Tokens.Add("PROJECT_DESC",  $PROJECT_DESC)
	$Tokens.Add("PROJECT_LIC",   $PROJECT_LIC)

	$Tokens.Add("AUTOGEN_MSG",  "THIS FILE IS GENERATED BY A SCRIPT, CHANGES WILL NOT PERSIST. EDIT THE CORRESPONDING .in TEMPLATE FILE INSTEAD.")

	Merge-Tokens -InputFile $SrcPath\include\wasim_version.in -OutputFile $SrcPath\include\wasim_version.h -Tokens $Tokens -NoWarning
	Merge-Tokens -InputFile $SrcPath\WASimClient_CLI\AssemblyInfo.cpp.in -OutputFile $SrcPath\WASimClient_CLI\AssemblyInfo.cpp -Tokens $Tokens -NoWarning
	Merge-Tokens -InputFile $DocPath\version.Doxyfile.in -OutputFile $DocPath\version.Doxyfile -Tokens $Tokens -NoWarning

}
